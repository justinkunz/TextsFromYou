{"version":3,"sources":["components/HomeForm.jsx","components/GoalCard.jsx","components/GoalCards.jsx","components/SubmitBtn.jsx","App.js","serviceWorker.js","index.js"],"names":["HomeForm","_this","this","react_default","a","createElement","className","Form","Group","widths","Field","control","Input","label","placeholder","onChange","e","props","onValueChange","firstName","target","value","trim","lastName","phoneNum","React","Component","GoalCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","showX","onClick","removeGoal","index","onGoalChange","class","addNewGoal","GoalCards","placeholders","goals","length","map","goal","i","components_GoalCard","val","Math","floor","random","SubmitBtn","validate","data","convertGoals","numOnly","newGoals","push","num","newNum","isNaN","toString","console","log","showAlert","results","setState","title","subtxt","show","postResults","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","axios","post","sent","stop","sweetalert_react_min_default","text","onConfirm","Button","color","App","tempGoals","splice","id","components_HomeForm","components_GoalCards","components_SubmitBtn","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6eb5c3f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Form, Input } from \"semantic-ui-react\";\r\n\r\nclass HomeForm extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"homePageForm\">\r\n        <Form>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Field\r\n              control={Input}\r\n              label=\"First name\"\r\n              placeholder=\"John\"\r\n              onChange={e =>\r\n                this.props.onValueChange({ firstName: e.target.value.trim() })\r\n              }\r\n            />\r\n            <Form.Field\r\n              control={Input}\r\n              label=\"Last name\"\r\n              placeholder=\"Doe\"\r\n              onChange={e =>\r\n                this.props.onValueChange({ lastName: e.target.value.trim() })\r\n              }\r\n            />\r\n            <Form.Field\r\n              control={Input}\r\n              label=\"Phone Number\"\r\n              placeholder=\"(214) 555-5555\"\r\n              onChange={e =>\r\n                this.props.onValueChange({ phoneNum: e.target.value.trim() })\r\n              }\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeForm;\r\n","import React from \"react\";\r\nimport { Input } from \"semantic-ui-react\";\r\n\r\nclass GoalCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"goalCard\">\r\n        <i\r\n          className={this.props.showX ? \"fas fa-times fa-2x removeGoal\" : \"\"}\r\n          onClick={\r\n            this.props.showX\r\n              ? () => this.props.removeGoal(this.props.index)\r\n              : null\r\n          }\r\n        />\r\n        <span>I want to </span>\r\n        <Input\r\n          value={this.props.value}\r\n          placeholder={this.props.placeholder}\r\n          onChange={e =>\r\n            this.props.onGoalChange(this.props.index, e.target.value)\r\n          }\r\n          className=\"goalInput\"\r\n        />\r\n        <i class=\"fas fa-plus fa-2x addNew\" onClick={this.props.addNewGoal} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoalCard;\r\n","import React from \"react\";\r\nimport GoalCard from \"./GoalCard\";\r\n\r\nclass GoalCards extends React.Component {\r\n  render() {\r\n    const placeholders = [\r\n      \"be a better employee\",\r\n      \"eat healthier\",\r\n      \"make good choices\",\r\n      \"be a nicer person\",\r\n      \"be more adventurous\",\r\n      \"be more romantic\",\r\n      \"be a better partner\",\r\n      \"be more productive\",\r\n      \"make better choices\",\r\n      \"be more honest\"\r\n    ];\r\n    const getPlaceholder = () => {\r\n      return placeholders[Math.floor(Math.random() * placeholders.length)];\r\n    };\r\n    let showX;\r\n    if (this.props.goals.length === 1) {\r\n      showX = false;\r\n    } else {\r\n      showX = true;\r\n    }\r\n    return this.props.goals.map((goal, i) => (\r\n      <GoalCard\r\n        index={i}\r\n        onGoalChange={(index, val) => this.props.onGoalChange(index, val)}\r\n        addNewGoal={() => this.props.addNewGoal()}\r\n        removeGoal={index => this.props.removeGoal(index)}\r\n        showX={showX}\r\n        value={goal}\r\n        placeholder={getPlaceholder()}\r\n      />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default GoalCards;\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport SweetAlert from \"sweetalert2-react\";\r\n\r\nclass SubmitBtn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { show: false, title: null, subtxt: null };\r\n  }\r\n\r\n  //validates entry data\r\n  validate = data => {\r\n    if (!data.firstName || !data.lastName || !data.phoneNum) {\r\n      return \"missing\";\r\n    }\r\n    data.goals = this.convertGoals(data.goals);\r\n    if (data.goals.length === 0) {\r\n      return \"goals\";\r\n    }\r\n    data.phoneNum = this.numOnly(data.phoneNum);\r\n    if (data.phoneNum.length !== 10) {\r\n      return \"phoneNum\";\r\n    }\r\n    return data;\r\n  };\r\n\r\n  //removes blanks from array\r\n  convertGoals = goals => {\r\n    let newGoals = [];\r\n    for (let i = 0; i < goals.length; i++) {\r\n      if (goals[i] !== \"\") newGoals.push(goals[i]);\r\n    }\r\n    return newGoals;\r\n  };\r\n\r\n  //returns only numeric value from string\r\n  numOnly = num => {\r\n    let newNum = \"\";\r\n    for (let i = 0; i < num.length; i++) {\r\n      if (!isNaN(num[i]) & (num[i] !== \" \")) {\r\n        newNum = newNum + num[i].toString();\r\n      }\r\n    }\r\n    console.log(newNum);\r\n    console.log(newNum.length);\r\n    return newNum;\r\n  };\r\n\r\n  showAlert = results => {\r\n    switch (results) {\r\n      case \"missing\":\r\n        this.setState({\r\n          title: \"Missing Fields!\",\r\n          subtxt: \"You must fill out all fields before submitting this data\",\r\n          show: true\r\n        });\r\n        break;\r\n      case \"phoneNum\":\r\n        this.setState({\r\n          title: \"Invalid Phone Number!\",\r\n          subtxt: \"You must provide a valid 10 digit phone number to continue\",\r\n          show: true\r\n        });\r\n        break;\r\n      case \"goals\":\r\n        this.setState({\r\n          title: \"No Goals!\",\r\n          subtxt: \"You must provide at least one goal to continue\",\r\n          show: true\r\n        });\r\n        break;\r\n      default:\r\n        this.setState({\r\n          title: \"Error!\",\r\n          subtxt: \"An error occurred\",\r\n          show: true\r\n        });\r\n    }\r\n  };\r\n\r\n  //called to post results to db\r\n  postResults = async () => {\r\n    const data = this.props.data;\r\n    const results = this.validate(data);\r\n    if (\r\n      results === \"missing\" ||\r\n      results === \"phoneNum\" ||\r\n      results === \"goals\"\r\n    ) {\r\n      this.showAlert(results);\r\n      return;\r\n    }\r\n    const response = await axios.post(\"/api/new-account\", results);\r\n    if (response.data === \"success\") {\r\n      this.setState({\r\n        title: \"Success!\",\r\n        subtxt: \"You're one step closer to reaching your goals!\",\r\n        show: true\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        title: \"Error!\",\r\n        subtxt: \"An error occurred\",\r\n        show: true\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SweetAlert\r\n          show={this.state.show}\r\n          title={this.state.title}\r\n          text={this.state.subtxt}\r\n          onConfirm={() => this.setState({ show: false })}\r\n        />\r\n        <Button color=\"violet\" onClick={() => this.postResults()}>\r\n          Reach Your Goals!\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitBtn;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport HomeForm from './components/HomeForm';\nimport GoalCards from './components/GoalCards';\nimport SubmitBtn from './components/SubmitBtn';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {goals: [\"\"]}\n  }\n\n  onValueChange = val => this.setState(val)\n\n  onGoalChange = (index, val) => {\n    let tempGoals = this.state.goals;\n    tempGoals[index] = val\n    this.setState({goals: tempGoals})\n  }\n\n  removeGoal = index => {\n    let tempGoals = this.state.goals;\n    tempGoals.splice(index, 1)\n    this.setState({goals: tempGoals})\n  }\n  addNewGoal = () => {\n    let tempGoals = this.state.goals;\n    tempGoals.push(\"\")\n    this.setState({goals: tempGoals})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-head\">\n          <div id=\"topHead\">Texts From You</div>\n          <div className=\"subHead\">Recieve helpful SMS reminders from your future self to help meet your goals!</div>\n          <HomeForm onValueChange={val => this.onValueChange(val)} />\n        <div className=\"subHead\">Add your goals below</div>\n        </div>\n        <div className=\"goalCards\">\n          <GoalCards \n            goals={this.state.goals}\n            onGoalChange={(index, val) => this.onGoalChange(index, val) } \n            addNewGoal={() => this.addNewGoal()} \n            removeGoal={index => this.removeGoal(index)}\n          />\n        </div>\n        <div className=\"goalCards\">\n        <SubmitBtn data={this.state} />\n        </div>\n      \n      </div>\n     \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}